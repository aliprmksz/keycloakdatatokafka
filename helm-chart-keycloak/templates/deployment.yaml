apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Release.Name }}-keycloak
spec:
  replicas: 1
  selector:
    matchLabels:
      app: keycloak
  template:
    metadata:
      labels:
        app: keycloak
    spec:
      containers:
        - name: keycloak
          image: {{ .Values.keycloak.image }}
          command: ["/opt/keycloak/bin/kc.sh", "start-dev"]
          env:
            - name: KC_HOSTNAME_STRICT_BACKCHANNEL
              value: "false"
            - name: KC_HTTP_ENABLED
              value: "true"
            - name: KC_HOSTNAME_STRICT_HTTPS
              value: "false"
            - name: KC_HEALTH_ENABLED
              value: "true"
            - name: KEYCLOAK_ADMIN
              valueFrom:
                secretKeyRef:
                  name: keycloak-secret
                  key: KEYCLOAK_ADMIN
            - name: KEYCLOAK_ADMIN_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: keycloak-secret
                  key: KEYCLOAK_ADMIN_PASSWORD
            - name: KC_SPI_EVENT_STORE_PROVIDER
              value: "custom-jpa-event-store"
            - name: KC_SPI_EVENT_STORE_CUSTOM-JPA-EVENT-STORE_ENABLED
              value: "true"
            - name: KC_DB
              value: "postgres"
            - name: KC_DB_URL
              value: "jdbc:postgresql://{{ .Values.postgresql.host }}/{{ .Values.postgresql.database }}"
            - name: KC_DB_USERNAME
              valueFrom:
                secretKeyRef:
                  name: keycloak-secret
                  key: POSTGRES_USER
            - name: KC_DB_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: keycloak-secret
                  key: POSTGRES_PASSWORD
          volumeMounts:
            - name: providers
              mountPath: /opt/keycloak/providers
          ports:
            - containerPort: 8080
      volumes:
        - name: providers
          hostPath:
            path: ./providers
